C51 COMPILER V9.56.0.0   Z_TIMER                                                           09/19/2018 15:12:20 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE Z_TIMER
OBJECT MODULE PLACED IN .\obj\z_timer.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE src\z_timer.c LARGE OPTIMIZE(8,SPEED) BROWSE ORDER INCDIR(.\src) DEBUG O
                    -BJECTEXTEND PRINT(.\lst\z_timer.lst) TABS(2) OBJECT(.\obj\z_timer.obj)

line level    source

   1          #include <stdio.h>
   2          #include "z_timer.h"
   3          #include "z_global.h"
   4          #include "z_gpio.h"
   5          
   6          #define FOSC 22118400L  
   7          static u32 systick_ms = 0;
   8          
   9          //1000微秒@22.1184MHz 自动重装模式
  10          //void timer0_init(void) {
  11          //  AUXR |= 0x80;   //定时器时钟1T模式
  12          //  TMOD &= 0xF0;   //设置定时器模式
  13          //  TL0 = 0x9A;     //设置定时初值
  14          //  TH0 = 0xA9;     //设置定时初值
  15          //  TF0 = 0;      //清除TF0标志
  16          //  TR0 = 1;      //定时器0开始计时
  17          //  ET0 = 1;      //定时器0开始计时
  18          //  EA  = 1;      //总开关
  19          //}
  20          
  21          void timer0_init(void) {
  22   1        AUXR |= 0x80;   //定时器时钟1T模式
  23   1        TMOD &= 0xF0;   //设置定时器模式
  24   1        TMOD |= 0x01;   //设置定时器模式
  25   1        TL0 = 0XAA;   //设置定时初值
  26   1        TH0 = 0XAA;   //设置定时初值
  27   1        TF0 = 0;    //清除TF0标志
  28   1        TR0 = 1;    //定时器0开始计时
  29   1        ET0 = 1;    //打开中断
  30   1        EA =  1;
  31   1      }
  32          
  33          
  34          
  35          void timer1_init(void) {
  36   1      //  AUXR |= 0x40;   //定时器时钟1T模式
  37   1      //  TMOD &= 0x0F;   //设置定时器模式
  38   1      //  TMOD |= 0x10;   //设置定时器模式
  39   1      //  TL1 = 0x00;     //设置定时初值
  40   1      //  TH1 = 0x28;     //设置定时初值
  41   1      //  TF1 = 0;      //清除TF1标志
  42   1      //  TR1 = 1;      //定时器1开始计时
  43   1      //  ET1 = 1;      //定时器0开始计时
  44   1      //  EA  = 1;      //总开关
  45   1        
  46   1        AUXR |= 0x40;   //定时器时钟1T模式
  47   1        TMOD &= 0x0F;   //设置定时器模式
  48   1        TL1 = 0;    //设置定时初值
  49   1        TH1 = 0;    //设置定时初值
  50   1        TF1 = 0;    //清除TF1标志
  51   1        TR1 = 1;    //定时器1开始计时
  52   1        ET1 = 1;    //打开中断
  53   1        EA = 1;
  54   1      }
C51 COMPILER V9.56.0.0   Z_TIMER                                                           09/19/2018 15:12:20 PAGE 2   

  55          
  56          void timer3_init(void)    //1毫秒@22.1184MHz
  57          {
  58   1        T4T3M |= 0x02;    //定时器时钟1T模式
  59   1        T3L = 0x9A;   //设置定时初值
  60   1        T3H = 0xA9;   //设置定时初值
  61   1        T4T3M |= 0x08;    //定时器3开始计时
  62   1        IE2 |= 0X20;    //打开外部中断
  63   1        EA  = 1;      //总开关
  64   1      }
  65          
  66          
  67          /*
  68          void timer0_reset(int t_us) {
  69            TL0 = (int)(65536-22.1184*t_us);
  70            TH0 = (int)(65536-22.1184*t_us) >> 8;
  71          }
  72          */
  73          
  74          void timer0_reset(int t_us) {
  75   1        //本来应该x22.1184 但由于单片机用的内部晶振，有一定误差，调整到下面这个值 
             -频率差不多50HZ
  76   1        TL0 = (int)(65535-20.5*t_us);
  77   1        TH0 = (int)(65535-20.5*t_us) >> 8;
  78   1      }
  79          
  80          u32 millis(void) {
  81   1        return systick_ms;
  82   1      }
  83          
  84          void T0_IRQ(void) interrupt 1 {
  85   1        static volatile u8 flag = 0;
  86   1        int temp;
  87   1      
  88   1        if(duoji_index1 >= 8) {
  89   2          duoji_index1 = 0;
  90   2        }
  91   1        
  92   1        if(!flag) {
  93   2          timer0_reset((unsigned int)(duoji_doing[duoji_index1].cur));
  94   2          dj_io_set(duoji_index1, 1);
  95   2          timer1_flag_dj = 1;
  96   2          //duoji_inc_handle(duoji_index1);
  97   2        } else {
  98   2          temp = 2500 - (unsigned int)(duoji_doing[duoji_index1].cur);
  99   2          if(temp < 20)temp = 20;
 100   2          timer0_reset(temp);
 101   2          dj_io_set(duoji_index1, 0);
 102   2          duoji_index1 ++;
 103   2        }
 104   1        flag = !flag;
 105   1      }
 106          
 107          void T3_IRQ(void) interrupt 19 {
 108   1        systick_ms ++;
 109   1      }
 110          
 111          
 112          //舵机定时中断处理
 113          void T1_IRQ(void) interrupt 3 {
 114   1        
 115   1        //timer0_reset(1000);
C51 COMPILER V9.56.0.0   Z_TIMER                                                           09/19/2018 15:12:20 PAGE 3   

 116   1        //systick_ms ++;
 117   1        TL1 = 0;    //设置定时初值
 118   1        TH1 = 0;    //设置定时初值
 119   1        csb_cnt++;
 120   1        
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    455    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
