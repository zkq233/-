C51 COMPILER V9.56.0.0   Z_W25Q64                                                          09/19/2018 15:12:21 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE Z_W25Q64
OBJECT MODULE PLACED IN .\obj\z_w25q64.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE src\z_w25q64.c LARGE OPTIMIZE(8,SPEED) BROWSE ORDER INCDIR(.\src) DEBUG 
                    -OBJECTEXTEND PRINT(.\lst\z_w25q64.lst) TABS(2) OBJECT(.\obj\z_w25q64.obj)

line level    source

   1          #include "z_w25q64.h"
   2          
   3          
   4          #define FOSC 22118400
   5          
   6          /************对SPCTL寄存器的设置位宏定义*************/
   7          #define SSIG    0x80  //SS引脚忽略
   8          #define SPEN    0x40  //SPI使能位
   9          #define DORD    0x20  //SPI数据发送LSB最先发送
  10          #define MSTR    0x10  //主从模式选择
  11          #define CPOL    0x08  //SPICLK空闲时为高电平
  12          #define CPHA    0x04  //数据在SPICLK的前时钟沿驱动,并在后时钟沿采样
  13          #define SP_CLK0 0x00  //SPI时钟频率为CPU_CLK/4
  14          #define SP_CLK1 0x01  //SPI时钟频率为CPU_CLK/16
  15          #define SP_CLK2 0x02  //SPI时钟频率为CPU_CLK/64
  16          #define SP_CLK3 0x03  //SPI时钟频率为CPU_CLK/128
  17          /************对SPSTAT寄存器的设置位宏定义************/
  18          #define SPIF    0x80  //传输完成标志
  19          #define WCOL    0x40  //SPI写冲突标志    
  20          
  21          /****************************************
  22          *函数名称:Spi0MasterInit
  23          *输    入:无
  24          *输    出:无
  25          *功    能:SPI0初始化为主机模式
  26          ******************************************/
  27          void SpiMasterInit(void)
  28          {
  29   1      #if 0
                   /* SPI MISO P1.4输入*/
                  P1M1|=  1<<4 ;
                  P1M0&=~(1<<4);
                   
                   /* SPI MOSI,SCK,CS P1.2,P1.3,P1.5推挽输出*/
                  P1M1&=~((1<<2)|(1<<3)|(1<<5));
                  P1M0|=  (1<<2)|(1<<3)|(1<<5);
                   
                  SPI_CS(1);
                  SPI_MOSI(1);
                  SPI_SCK(1);
              #else 
  42   1          P1M1&=~(1<<2);
  43   1          P1M0|= (1<<2);
  44   1          SPDAT  = 0;         //清空数据寄存器
  45   1          SPSTAT = SPIF|WCOL; //清空SPI状态寄存器
  46   1          
  47   1      #if FOSC==33000000UL    
                  SPCTL  = SPEN|MSTR|SP_CLK1|SSIG; //SPI设置为主机模式
              #else
  50   1          SPCTL  = SPEN|MSTR|SP_CLK0|SSIG; //SPI设置为主机模式
  51   1      #endif    
  52   1          
  53   1      #endif     
  54   1      }
C51 COMPILER V9.56.0.0   Z_W25Q64                                                          09/19/2018 15:12:21 PAGE 2   

  55          
  56          /****************************************
  57          *函数名称:SpiWriteRead
  58          *输    入:ucData 要发送的数据
  59          *输    出:返回字节数据
  60          *功    能:SPI读写数据
  61          ******************************************/
  62          #if 0
              UINT8 SpiWriteRead(UINT8 d)
              {
                  UINT8 i;
                
                  SPI_SCK(0);
                
                  for(i=0; i<8; i++)
                  {
                      /*   发送字节高位 */
                      if(d & 0x80)
                      {
                         SPI_MOSI(1);
                      }
                      else
                      {
                         SPI_MOSI(0);
                      }
                      
                      /*   接收字节高位 */
                      d<<=1;
                      
                      SPI_SCK(1);
                    
                      if(SPI_MISO())
                      {
                         d|=0x01;
                      }
                        
                      SPI_SCK(0);
              
                  
                  } 
                  
                  return d;
              }
              #else
  99          
 100          
 101          
 102          
 103          UINT8 SpiWriteRead(UINT8 d)
 104          {
 105   1          SPDAT = d;                  //触发SPI发送数据
 106   1          while (!(SPSTAT & SPIF));   //等待发送完成
 107   1          SPSTAT = SPIF | WCOL;       //清除SPI状态位
 108   1          return SPDAT;               //返回SPI数据
 109   1      }
 110          #endif
 111          
 112          /*
 113          void SpiSetSpeedLow(void)
 114          {
 115              SPCTL  &=~SP_CLK3; 
 116              SPCTL |=SP_CLK3;
C51 COMPILER V9.56.0.0   Z_W25Q64                                                          09/19/2018 15:12:21 PAGE 3   

 117          }
 118          
 119          void SpiSetSpeedHigh(void)
 120          {
 121              SPCTL  &=~SP_CLK3; 
 122          #if FOSC==33000000UL    
 123              SPCTL  |=SP_CLK1;
 124          #else
 125              SPCTL  |=SP_CLK0;
 126          #endif
 127          }
 128          */
 129          
 130          /*
 131          void Delayus(UINT16 i )
 132          {
 133            unsigned char j = 0;
 134            for (;i > 0; i--);
 135          }*/
 136          
 137          
 138          /****************************************
 139          *函数名称:SpiFlashInit
 140          *输    入:无
 141          *输    出:无
 142          *功    能:初始化SPI FLASH的IO口
 143          ******************************************/
 144          void SpiFlashInit(void)
 145          {
 146   1           /* Flash CS P1.0推挽输出*/
 147   1         P4M1&=~(1<<0);
 148   1         P4M0&=  ~(1<<0);
 149   1         
 150   1           SpiMasterInit();
 151   1      }  
 152          /****************************************
 153          *函数名称:SpiFlashReadSR
 154          *输    入:无
 155          *输    出:忙标记位(1,忙;0,空闲)
 156          *功    能:读取SPI_FLASH的状态寄存器
 157          BIT7  6   5   4   3   2   1   0
 158          SPR   RV  TB BP2 BP1 BP0 WEL BUSY
 159          SPR:默认0,状态寄存器保护位,配合WP使用
 160          TB,BP2,BP1,BP0:FLASH区域写保护设置
 161          WEL:写使能锁定
 162          BUSY:忙标记位(1,忙;0,空闲)
 163          默认:0x00
 164          ******************************************/
 165          UINT8 SpiFlashReadSR(void)   
 166          {  
 167   1        UINT8 rt=0;   
 168   1        SPI_FLASH_CS(0);                      //使能器件   
 169   1        SpiWriteRead(W25X_ReadStatusReg);    //发送读取状态寄存器命令    
 170   1        rt=SpiWriteRead(0Xff);               //读取一个字节  
 171   1        SPI_FLASH_CS(1);                      //取消片选     
 172   1        return rt;   
 173   1      } 
 174          /****************************************
 175          *函数名称:SpiFlashWriteSR
 176          *输    入:设置状态值
 177          *输    出:无
 178          *功    能:写SPI_FLASH的状态寄存器
C51 COMPILER V9.56.0.0   Z_W25Q64                                                          09/19/2018 15:12:21 PAGE 4   

 179          只有SPR,TB,BP2,BP1,BP0(bit 7,5,4,3,2)可以写
 180          *****************************************
 181          void SpiFlashWriteSR(UINT8 sr)   
 182          {   
 183            SPI_FLASH_CS(0);                      //使能器件   
 184            SpiWriteRead(W25X_WriteStatusReg);   //发送写取状态寄存器命令    
 185            SpiWriteRead(sr);                    //写入一个字节  
 186            SPI_FLASH_CS(1);                      //取消片选            
 187          }   */
 188          
 189          /****************************************
 190          *函数名称:SpiFlashWriteEnable
 191          *输    入:无
 192          *输    出:无
 193          *功    能:SPI_FLASH写使能，WEL置位
 194          ******************************************/
 195          void SpiFlashWriteEnable(void)   
 196          {
 197   1        SPI_FLASH_CS(0);                      //使能器件   
 198   1        SpiWriteRead(W25X_WriteEnable);      //发送写使能  
 199   1        SPI_FLASH_CS(1);                      //取消片选            
 200   1      } 
 201          /****************************************
 202          *函数名称:SpiFlashWriteDisable
 203          *输    入:无
 204          *输    出:无
 205          *功    能:SPI_FLASH写禁止，将WEL清零   
 206          *****************************************
 207          void SpiFlashWriteDisable(void)   
 208          {  
 209            SPI_FLASH_CS(0);                       //使能器件   
 210            SpiWriteRead(W25X_WriteDisable);      //发送写禁止指令    
 211            SPI_FLASH_CS(1);                       //取消片选             
 212          }     */  
 213          
 214          /****************************************
 215          *函数名称:SpiFlashReadID
 216          *输    入:无
 217          *输    出:         
 218                    0XEF13,表示芯片型号为W25Q80  
 219                    0XEF14,表示芯片型号为W25Q16    
 220                    0XEF15,表示芯片型号为W25Q32  
 221                    0XEF16,表示芯片型号为W25Q64 
 222          *功    能:读取芯片ID
 223          ******************************************/
 224          UINT16 SpiFlashReadID(void)
 225          {
 226   1        UINT16 Temp = 0;    
 227   1        SPI_FLASH_CS(0);            
 228   1        SpiWriteRead(0x90);             //发送读取ID命令      
 229   1        SpiWriteRead(0x00);       
 230   1        SpiWriteRead(0x00);       
 231   1        SpiWriteRead(0x00);            
 232   1        Temp|=SpiWriteRead(0xFF)<<8;  
 233   1        Temp|=SpiWriteRead(0xFF);  
 234   1        SPI_FLASH_CS(1);            
 235   1        return Temp;
 236   1      }           
 237          /****************************************
 238          *函数名称:SpiFlashRead
 239          *输    入:pBuffer        -数据存储区
 240                    ReadAddr       -开始读取的地址(24bit)
C51 COMPILER V9.56.0.0   Z_W25Q64                                                          09/19/2018 15:12:21 PAGE 5   

 241                    NumByteToRead  -要读取的字节数(最大65535)
 242          *输    出:无
 243          *功    能:读取SPI FLASH  
 244          ******************************************/
 245          void SpiFlashRead(UINT8* pBuffer,UINT32 ReadAddr,UINT16 NumByteToRead)   
 246          { 
 247   1        UINT16 i;                           
 248   1        SPI_FLASH_CS(0);                         //使能器件   
 249   1        SpiWriteRead(W25X_ReadData);            //发送读取命令   
 250   1        SpiWriteRead((UINT8)((ReadAddr)>>16));  //发送24bit地址    
 251   1        SpiWriteRead((UINT8)((ReadAddr)>>8));   
 252   1        SpiWriteRead((UINT8)(ReadAddr&0xFF));   
 253   1        
 254   1        for(i=0;i<NumByteToRead;i++)
 255   1        { 
 256   2            pBuffer[i]=SpiWriteRead(0XFF);      //循环读数  
 257   2        }
 258   1        
 259   1        SPI_FLASH_CS(1);                      
 260   1      }  
 261          /****************************************
 262          *函数名称:SpiFlashWritePage
 263          *输    入:pBuffer        -数据存储区
 264                    WriteAddr      -开始写入的地址(24bit)
 265                    NumByteToWrite -要写入的字节数(最大256),该数不应该超过该页的剩余字节数
 266          *输    出:无
 267          *功    能:SPI在一页(0~65535)内写入少于256个字节的数据
 268          ******************************************/
 269          void SpiFlashWritePage(UINT8* pBuffer,UINT32 WriteAddr,UINT16 NumByteToWrite)
 270          {
 271   1        UINT16 i; 
 272   1        
 273   1        SpiFlashWriteEnable();                  //SET WEL 
 274   1        SPI_FLASH_CS(0);                           //使能器件
 275   1        
 276   1        SpiWriteRead(W25X_PageProgram);           //发送写页命令   
 277   1        SpiWriteRead((UINT8)((WriteAddr)>>16));   //发送24bit地址    
 278   1        SpiWriteRead((UINT8)((WriteAddr)>>8));   
 279   1        SpiWriteRead((UINT8)WriteAddr);
 280   1        
 281   1        for(i=0;i<NumByteToWrite;i++)SpiWriteRead(pBuffer[i]);//循环写数  
 282   1        
 283   1        SPI_FLASH_CS(1);                            //取消片选 
 284   1        SpiFlashWaitBusy();                     //等待写入结束
 285   1      } 
 286          /****************************************
 287          *函数名称:SpiFlashWriteNoCheck
 288          *输    入:pBuffer        -数据存储区
 289                    WriteAddr      -开始写入的地址(24bit)
 290                    NumByteToWrite -要写入的字节数(最大65535)
 291          *输    出:无
 292          *功    能:无检验写SPI FLASH 
 293          必须确保所写的地址范围内的数据全部为0XFF,
 294          否则在非0XFF处写入的数据将失败!
 295          具有自动换页功能 
 296          在指定地址开始写入指定长度的数据,但是要确保地址不越界!
 297          ******************************************/
 298          void SpiFlashWriteNoCheck(UINT8* pBuffer,UINT32 WriteAddr,UINT16 NumByteToWrite)   
 299          {            
 300   1        UINT16 pageremain;     
 301   1        pageremain=256-WriteAddr%256; //单页剩余的字节数          
 302   1        if(NumByteToWrite<=pageremain)pageremain=NumByteToWrite;//不大于256个字节
C51 COMPILER V9.56.0.0   Z_W25Q64                                                          09/19/2018 15:12:21 PAGE 6   

 303   1        
 304   1        while(1)
 305   1        {    
 306   2          SpiFlashWritePage(pBuffer,WriteAddr,pageremain);
 307   2          if(NumByteToWrite==pageremain)break;//写入结束了
 308   2          else //NumByteToWrite>pageremain
 309   2          {
 310   3            pBuffer+=pageremain;
 311   3            WriteAddr+=pageremain;  
 312   3      
 313   3            NumByteToWrite-=pageremain;           //减去已经写入了的字节数
 314   3            if(NumByteToWrite>256)pageremain=256; //一次可以写入256个字节
 315   3            else pageremain=NumByteToWrite;       //不够256个字节了
 316   3          }
 317   2        }     
 318   1      } 
 319          
 320          /****************************************
 321          *函数名称:SpiFlashWrite
 322          *输    入:pBuffer        -数据存储区
 323                    WriteAddr      -开始写入的地址(24bit)
 324                    NumByteToWrite -要写入的字节数(最大65535)
 325          *输    出:无
 326          *功    能:写SPI FLASH  
 327          在指定地址开始写入指定长度的数据并带擦除操作!
 328          ******************************************/
 329          void SpiFlashWrite(UINT8* pBuffer,UINT32 WriteAddr,UINT16 NumByteToWrite)   
 330          { 
 331   1        UINT32   secpos = 0;
 332   1        //secpos=WriteAddr>>9;//扇区地址  
 333   1        //SpiFlashEraseSector(secpos);//擦除这个扇区
 334   1        SpiFlashWriteNoCheck(pBuffer,WriteAddr,NumByteToWrite);//写入整个扇区  
 335   1      }
 336          /****************************************
 337          *函数名称:SpiFlashEraseChip
 338          *输    入:无
 339          *输    出:无
 340          *功    能:擦除整个芯片      
 341          *****************************************
 342          void SpiFlashEraseChip(void)   
 343          {                                   
 344              SpiFlashWriteEnable();             //SET WEL 
 345              SpiFlashWaitBusy();   
 346              SPI_FLASH_CS(0);                      //使能器件   
 347              SpiWriteRead(W25X_ChipErase);        //发送片擦除命令  
 348              SPI_FLASH_CS(1);                      //取消片选            
 349              SpiFlashWaitBusy();                 //等待芯片擦除结束
 350          }   */
 351          /****************************************
 352          *函数名称:SpiFlashEraseSector
 353          *输    入:Dst_Addr  -扇区地址 根据实际容量设置
 354          *输    出:无
 355          *功    能:擦除一个扇区最少150毫秒
 356          ******************************************/
 357          void SpiFlashEraseSector(UINT32 Dst_Addr)   
 358          {  
 359   1       
 360   1        Dst_Addr <<= 12;
 361   1          SpiFlashWriteEnable();                //SET WEL    
 362   1          SpiFlashWaitBusy();   
 363   1          SPI_FLASH_CS(0);                         //使能器件   
 364   1          SpiWriteRead(W25X_SectorErase);         //发送扇区擦除指令 
C51 COMPILER V9.56.0.0   Z_W25Q64                                                          09/19/2018 15:12:21 PAGE 7   

 365   1          SpiWriteRead((UINT8)((Dst_Addr)>>16));  //发送24bit地址    
 366   1          SpiWriteRead((UINT8)((Dst_Addr)>>8));   
 367   1          SpiWriteRead((UINT8)Dst_Addr);  
 368   1        SPI_FLASH_CS(1);                         //取消片选             
 369   1          SpiFlashWaitBusy();                    //等待擦除完成
 370   1      }  
 371          /****************************************
 372          *函数名称:SpiFlashWaitBusy
 373          *输    入:无
 374          *输    出:无
 375          *功    能:等待空闲
 376          ******************************************/
 377          void SpiFlashWaitBusy(void)   
 378          {   
 379   1        while((SpiFlashReadSR()&0x01)==0x01);  // 等待BUSY位清空
 380   1      }  
 381          /****************************************
 382          *函数名称:SpiFlashPowerDown
 383          *输    入:无
 384          *输    出:无
 385          *功    能:进入掉电模式
 386          *****************************************
 387          void SpiFlashPowerDown(void)   
 388          { 
 389              SPI_FLASH_CS(0);                         //使能器件   
 390              SpiWriteRead(W25X_PowerDown);           //发送掉电命令  
 391              SPI_FLASH_CS(1);                         //取消片选             
 392              Delayus(3);                              //等待TPD  
 393          } */  
 394          /****************************************
 395          *函数名称:SpiFlashWakeUp
 396          *输    入:无
 397          *输    出:无
 398          *功    能:唤醒
 399          *****************************************
 400          void SpiFlashWakeUp(void)   
 401          {  
 402              SPI_FLASH_CS(0);                            //使能器件   
 403              SpiWriteRead(W25X_ReleasePowerDown);       //发送唤醒指令 
 404            SPI_FLASH_CS(1);                            //取消片选            
 405              Delayus(3);                                 //等待TRES1
 406          }*/   
 407          
 408          
 409          
 410          
 411          
 412          
 413          
 414          
 415          
 416          
 417          
 418          
 419          
 420          
 421          
 422          
 423          
 424          
 425          
 426          
C51 COMPILER V9.56.0.0   Z_W25Q64                                                          09/19/2018 15:12:21 PAGE 8   

 427          
 428          
 429          
 430          
 431          
 432          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    747    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      46
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
